program => decl* EOF

decl => varDecl | stmt

varDecl => ( "var" | "final" ) IDENTIFIER ( "=" expression )? ";"

stmt => exprStmt | exitStmt

exprStmt = expression ";"
exitStmt = "exit" expression? ";"

expression => assignment
assignment => IDENTIFIER "=" assignment | equality

equality => comparison ( ( "!=" | "==" ) comparison )*
comparison => addition ( ( ">" | ">=" | "<" | "<=" ) addition )*

addition => multiplication ( ( "+" | "-" ) multiplication )*
multiplication => power ( ( "*" | "/" | "%" ) power )*
power => unary ( "^" unary )*

unary => ( "!" | "-" ) unary | primary

primary => NUMBER | STRING | "(" expression ")" | IDENTIFIER